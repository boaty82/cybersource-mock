buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
		springVersion = '4.3.8.RELEASE'
		springIntVersion = '4.1.0.RELEASE'
		cukesVersion = '1.2.5'
		generatedSources = "${buildDir}/gensrc/"
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.github.jacobono:gradle-jaxb-plugin:1.3.6'
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.github.jacobono.jaxb'

group = 'uk.co.bty.mock'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.5.1'
}

sourceSets {
	main.java {
		srcDir "${generatedSources}"
	}

	integrationTest {
		java {
			srcDir 'src/integrationTest/java'
		}
		resources {
			srcDir 'src/integrationTest/resources'
		}
		compileClasspath += main.output + test.output
		runtimeClasspath += main.output + test.output
	}
}

configurations {
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime
}

idea {
	module {
		testSourceDirs += file('src/integrationTest/java')
		scopes.TEST.plus += [configurations.integrationTestCompile]
		scopes.TEST.plus += [configurations.integrationTestRuntime]
	}
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter'
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-web-services')
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile 'org.projectlombok:lombok'
	compile 'org.apache.commons:commons-lang3:3.5'
	compile 'com.fasterxml.jackson.core:jackson-core:2.9.4'

	// Database
	runtime("com.h2database:h2")

	// JAXB code generation
	jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7-b41'
	jaxb 'com.sun.xml.bind:jaxb-impl:2.2.7-b41'
	jaxb 'javax.xml.bind:jaxb-api:2.2.7'
	jaxb "org.jvnet.jaxb2_commons:jaxb2-basics-ant:0.6.5"
	jaxb "org.jvnet.jaxb2_commons:jaxb2-basics:0.6.4"
	jaxb "org.jvnet.jaxb2_commons:jaxb2-basics-annotate:0.6.4"
	jaxb 'org.projectlombok:lombok'

	testCompile 'junit:junit:4.12'
	testCompile 'org.assertj:assertj-core:3.9.0'
	testCompile 'org.assertj:assertj-core-java8:1.0.0m1'

	integrationTestCompile "info.cukes:cucumber-java:${cukesVersion}"
	integrationTestCompile "info.cukes:cucumber-spring:${cukesVersion}"
	integrationTestCompile 'org.springframework.boot:spring-boot-starter-test'
	integrationTestCompile "org.springframework:spring-context:${springVersion}"
	integrationTestCompile "org.springframework:spring-test:${springVersion}"
	integrationTestCompile 'org.apache.httpcomponents:httpclient:4.5.5'
	integrationTestCompile "org.springframework.integration:spring-integration-core:${springIntVersion}"
    integrationTestCompile "org.springframework.integration:spring-integration-ws:${springIntVersion}"
    integrationTestCompile "org.springframework.integration:spring-integration-http:${springIntVersion}"
}

jaxb {
	new File("${generatedSources}").mkdirs()
	xsdDir = "/src/main/resources/xjc"
	bindingsDir = "/src/main/resources/xjc"
	bindings = ["xsd-bindings.xjb"]
	episodesDir = "build/schema/episodes"
	xjc {
		taskClassname  = "org.jvnet.jaxb2_commons.xjc.XJC2Task"
		destinationDir = "${generatedSources}"
		generatePackage= "uk.co.bty.mock.cybersource.schema.transaction"
		args           = ["-Xannotate"]
	}
}

compileJava.dependsOn xjc

task integrationTest(type: Test) {
	group 'verification'
	description 'Runs integration tests'
	dependsOn assemble, compileIntegrationTestJava
	mustRunAfter test
	doLast {
		javaexec {
			main = "cucumber.api.cli.Main"
			classpath = configurations.integrationTestRuntime +
					sourceSets.main.output +
					sourceSets.integrationTest.output
			args = ['--plugin', "html:${buildDir}/reports/${name}",
					'--plugin', "json:${buildDir}/reports/${name}.json",
					'--plugin', 'pretty',
					'--glue', 'uk.co.bty.mock.cybersource.stepdefs',
					'src/integrationTest/resources']
		}
	}
	testClassesDir = sourceSets.integrationTest.output.classesDir
	classpath = sourceSets.integrationTest.runtimeClasspath
	outputs.upToDateWhen { false }
}

check.dependsOn integrationTest

